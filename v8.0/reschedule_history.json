{
    "openapi": "3.0.0",
    "info": {
        "title": "reschedule_history",
        "description": "Reschedule History",
        "version": "v8.0"
    },
    "servers": [{"url": "https://zohoapis.com"}],
    "paths": {
        "/crm/v8/Appointments_Rescheduled_History__s": {
            "post": {
                "operationId": "Add Appointments Rescheduled History",
                "requestBody": {"$ref": "#/components/requestBodies/body"},
                "responses": {
                    "201": {"$ref": "#/components/responses/SuccessResponse"},
                    "207": {"$ref": "#/components/responses/MultiStatus"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"}
                },
                "security": [{"iam-oauth2-schema": [
                    "ZohoCRM.settings.all",
                    "ZohoCRM.settings.roles.all",
                    "ZohoCRM.settings.roles.read"
                ]}]
            },
            "put": {
                "operationId": "Update Appointments Rescheduled History",
                "requestBody": {"$ref": "#/components/requestBodies/body"},
                "responses": {
                    "201": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"}
                },
                "security": [{"iam-oauth2-schema": [
                    "ZohoCRM.settings.all",
                    "ZohoCRM.settings.roles.all",
                    "ZohoCRM.settings.roles.read"
                ]}]
            },
            "get": {
                "operationId": "Get Appointments Rescheduled History",
                "parameters": [
                    {"$ref": "#/components/parameters/fields"},
                    {"$ref": "#/components/parameters/page"},
                    {"$ref": "#/components/parameters/per_page"},
                    {"$ref": "#/components/parameters/sort_order"},
                    {"$ref": "#/components/parameters/sort_by"},
                    {"$ref": "#/components/parameters/ids"}
                ],
                "responses": {
                    "200": {"$ref": "#/components/responses/Response"},
                    "400": {"$ref": "#/components/responses/RErrorResponse"}
                },
                "security": [{"iam-oauth2-schema": [
                    "ZohoCRM.settings.all",
                    "ZohoCRM.settings.roles.all",
                    "ZohoCRM.settings.roles.read"
                ]}]
            }
        },
        "/crm/v8/Appointments_Rescheduled_History__s/{id}": {
            "put": {
                "operationId": "Update Appointment Rescheduled History",
                "parameters": [{"$ref": "#/components/parameters/id"}],
                "requestBody": {"$ref": "#/components/requestBodies/body"},
                "responses": {
                    "201": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"}
                },
                "security": [{"iam-oauth2-schema": [
                    "ZohoCRM.settings.all",
                    "ZohoCRM.settings.roles.all",
                    "ZohoCRM.settings.roles.read"
                ]}]
            },
            "get": {
                "operationId": "Get Appointment Rescheduled History",
                "parameters": [
                    {"$ref": "#/components/parameters/id"},
                    {"$ref": "#/components/parameters/fields"}
                ],
                "responses": {
                    "204": {"description": ""},
                    "200": {"$ref": "#/components/responses/Response"},
                    "400": {"$ref": "#/components/responses/RErrorResponse"}
                },
                "security": [{"iam-oauth2-schema": [
                    "ZohoCRM.settings.all",
                    "ZohoCRM.settings.roles.all",
                    "ZohoCRM.settings.roles.read"
                ]}]
            },
            "delete": {
                "operationId": "Delete Appointments Rescheduled History",
                "parameters": [{"$ref": "#/components/parameters/id"}],
                "responses": {
                    "201": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"}
                },
                "security": [{"iam-oauth2-schema": [
                    "ZohoCRM.settings.all",
                    "ZohoCRM.settings.roles.all",
                    "ZohoCRM.settings.roles.read"
                ]}]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {"type": "string"},
                    "id": {"type": "string"},
                    "email": {"type": "string"}
                },
                "required": [
                    "name",
                    "id",
                    "email"
                ]
            },
            "Reschedule_History": {
                "type": "object",
                "properties": {
                    "$currency_symbol": {"type": "string"},
                    "Rescheduled_To": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "$review_process": {"type": "boolean"},
                    "Reschedule_Reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "$sharing_permission": {"type": "string"},
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Modified_By": {"$ref": "#/components/schemas/User"},
                    "$review": {"type": "boolean"},
                    "Rescheduled_By": {"$ref": "#/components/schemas/User"},
                    "$state": {"type": "string"},
                    "$canvas_id": {"type": "string"},
                    "$process_flow": {"type": "boolean"},
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "Rescheduled_Time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "$zia_visions": {"type": "boolean"},
                    "$approved": {"type": "boolean"},
                    "Modified_Time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "$approval": {
                        "type": "object",
                        "properties": {
                            "delegate": {"type": "boolean"},
                            "approve": {"type": "boolean"},
                            "reject": {"type": "boolean"},
                            "resubmit": {"type": "boolean"}
                        },
                        "required": [
                            "delegate",
                            "approve",
                            "reject",
                            "resubmit"
                        ]
                    },
                    "Created_Time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Rescheduled_From": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Appointment_Name": {
                        "type": "object",
                        "properties": {
                            "name": {"type": "string"},
                            "id": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "required": [
                            "name",
                            "id"
                        ]
                    },
                    "$editable": {"type": "boolean"},
                    "$orchestration": {"type": "boolean"},
                    "$in_merge": {"type": "boolean"},
                    "Created_By": {"$ref": "#/components/schemas/User"},
                    "$approval_state": {"type": "string"},
                    "Reschedule_Note": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "$currency_symbol",
                    "Rescheduled_To",
                    "$review_process",
                    "Reschedule_Reason",
                    "$sharing_permission",
                    "Name",
                    "Modified_By",
                    "$review",
                    "Rescheduled_By",
                    "$state",
                    "$canvas_id",
                    "$process_flow",
                    "id",
                    "Rescheduled_Time",
                    "$zia_visions",
                    "$approved",
                    "Modified_Time",
                    "$approval",
                    "Created_Time",
                    "Rescheduled_From",
                    "Appointment_Name",
                    "$editable",
                    "$orchestration",
                    "$in_merge",
                    "Created_By",
                    "$approval_state",
                    "Reschedule_Note"
                ]
            },
            "Success_Response": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["SUCCESS"],
                        "nullable": true
                    },
                    "details": {
                        "type": "object",
                        "properties": {
                            "Modified_Time": {
                                "type": "string",
                                "nullable": true
                            },
                            "Modified_By": {"$ref": "./users.json#/components/schemas/Minified_User"},
                            "Created_Time": {
                                "type": "string",
                                "nullable": true
                            },
                            "id": {
                                "type": "string",
                                "nullable": true
                            },
                            "Created_By": {"$ref": "./users.json#/components/schemas/Minified_User"},
                            "$approval_state": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "required": [
                            "Modified_Time",
                            "Modified_By",
                            "Created_Time",
                            "id",
                            "Created_By",
                            "$approval_state"
                        ]
                    },
                    "message": {
                        "type": "string",
                        "enum": [
                            "record deleted",
                            "record added"
                        ],
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": ["success"],
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "details",
                    "message",
                    "status"
                ]
            },
            "Resource_Path_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA",
                            "INVALID_MODULE"
                        ]
                    },
                    "message": {"type": "string"},
                    "details": {
                        "type": "object",
                        "properties": {"resource_path_index": {
                            "type": "integer",
                            "format": "int32"
                        }},
                        "required": ["resource_path_index"]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Mandatory_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["MANDATORY_NOT_FOUND"]
                    },
                    "message": {
                        "type": "string",
                        "enum": ["required field not found"]
                    },
                    "details": {
                        "type": "object",
                        "properties": {
                            "api_name": {"type": "string"},
                            "json_path": {"type": "string"}
                        },
                        "required": [
                            "api_name",
                            "json_path"
                        ]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Invalid_Data_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"]
                    },
                    "message": {
                        "type": "string",
                        "enum": ["record not deleted"]
                    },
                    "details": {
                        "type": "object",
                        "properties": {
                            "api_name": {"type": "string"},
                            "json_path": {"type": "string"}
                        },
                        "required": [
                            "api_name",
                            "json_path"
                        ]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Invalid_Data_API_Exception_Without_ID": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"],
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "enum": ["record not deleted"],
                        "nullable": true
                    },
                    "details": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Invalid_Module_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_MODULE"]
                    },
                    "message": {
                        "type": "string",
                        "enum": ["the module name given seems to be invalid"]
                    },
                    "details": {"type": "object"}
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Expected_Data_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"]
                    },
                    "message": {
                        "type": "string",
                        "enum": ["invalid data"]
                    },
                    "details": {
                        "type": "object",
                        "properties": {
                            "api_name": {"type": "string"},
                            "expected_data_type": {"type": "string"},
                            "json_path": {"type": "string"}
                        },
                        "required": [
                            "api_name",
                            "expected_data_type",
                            "json_path"
                        ]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Max_Length_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"]
                    },
                    "message": {
                        "type": "string",
                        "enum": ["invalid data"]
                    },
                    "details": {
                        "type": "object",
                        "properties": {
                            "api_name": {"type": "string"},
                            "maximum_length": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "json_path": {"type": "string"}
                        },
                        "required": [
                            "api_name",
                            "maximum_length",
                            "json_path"
                        ]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Expected_Max_Data_API_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"],
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "enum": ["invalid data"],
                        "nullable": true
                    },
                    "details": {
                        "type": "object",
                        "properties": {
                            "api_name": {
                                "type": "string",
                                "nullable": true
                            },
                            "expected_data_type": {
                                "type": "string",
                                "nullable": true
                            },
                            "maximum_length": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                            },
                            "json_path": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "required": [
                            "api_name",
                            "expected_data_type",
                            "maximum_length",
                            "json_path"
                        ]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Body_Wrapper": {
                "type": "object",
                "properties": {"data": {
                    "items": {"$ref": "#/components/schemas/Reschedule_History"},
                    "type": "array"
                }},
                "required": ["data"]
            },
            "Response_Wrapper": {
                "type": "object",
                "properties": {
                    "data": {
                        "items": {"$ref": "#/components/schemas/Reschedule_History"},
                        "type": "array"
                    },
                    "info": {"$ref": "#/components/schemas/Info"}
                }
            },
            "Info": {
                "type": "object",
                "properties": {
                    "per_page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "next_page_token": {"type": "string"},
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "previous_page_token": {"type": "string"},
                    "page_token_expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "more_records": {"type": "boolean"}
                }
            }
        },
        "responses": {
            "Response": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Response_Wrapper"}]}}}
            },
            "SuccessResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{
                    "type": "object",
                    "properties": {"data": {
                        "items": {"oneOf": [{"$ref": "#/components/schemas/Success_Response"}]},
                        "type": "array"
                    }},
                    "required": ["data"]
                }]}}}
            },
            "MultiStatus": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{
                    "type": "object",
                    "properties": {"data": {
                        "items": {"oneOf": [
                            {"$ref": "#/components/schemas/Success_Response"},
                            {"$ref": "#/components/schemas/Mandatory_API_Exception"},
                            {"$ref": "#/components/schemas/Invalid_Data_API_Exception"},
                            {"$ref": "#/components/schemas/Expected_Data_API_Exception"},
                            {"$ref": "#/components/schemas/Max_Length_API_Exception"},
                            {"$ref": "#/components/schemas/Expected_Max_Data_API_Exception"}
                        ]},
                        "type": "array"
                    }},
                    "required": ["data"]
                }]}}}
            },
            "ErrorResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [
                    {
                        "type": "object",
                        "properties": {"data": {
                            "items": {"oneOf": [
                                {"$ref": "#/components/schemas/Mandatory_API_Exception"},
                                {"$ref": "#/components/schemas/Expected_Data_API_Exception"},
                                {"$ref": "#/components/schemas/Invalid_Data_API_Exception"},
                                {"$ref": "#/components/schemas/Max_Length_API_Exception"},
                                {"$ref": "#/components/schemas/Expected_Max_Data_API_Exception"}
                            ]},
                            "type": "array"
                        }},
                        "required": ["data"]
                    },
                    {"$ref": "#/components/schemas/Mandatory_API_Exception"},
                    {"$ref": "#/components/schemas/Invalid_Data_API_Exception"},
                    {"$ref": "#/components/schemas/Expected_Data_API_Exception"},
                    {"$ref": "#/components/schemas/Invalid_Module_API_Exception"},
                    {"$ref": "#/components/schemas/Max_Length_API_Exception"},
                    {"$ref": "#/components/schemas/Expected_Max_Data_API_Exception"}
                ]}}}
            },
            "RErrorResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [
                    {"$ref": "#/components/schemas/Mandatory_API_Exception"},
                    {"$ref": "#/components/schemas/Invalid_Data_API_Exception"},
                    {"$ref": "#/components/schemas/Expected_Data_API_Exception"},
                    {"$ref": "#/components/schemas/Invalid_Module_API_Exception"},
                    {"$ref": "#/components/schemas/Max_Length_API_Exception"},
                    {"$ref": "#/components/schemas/Expected_Max_Data_API_Exception"}
                ]}}}
            }
        },
        "parameters": {
            "id": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {"type": "string"}
            },
            "fields": {
                "name": "fields",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            },
            "page": {
                "name": "page",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "sort_by": {
                "name": "sort_by",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            },
            "sort_order": {
                "name": "sort_order",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            },
            "ids": {
                "name": "ids",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            }
        },
        "requestBodies": {"body": {
            "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_Wrapper"}}},
            "required": true
        }},
        "securitySchemes": {"iam-oauth2-schema": {"$ref": "https://raw.githubusercontent.com/Zohocorp-Pvt-Ltd/crm-oas/refs/heads/main/v8.0/common.json#/components/securitySchemes/iam-oauth2-schema"}}
    }
}