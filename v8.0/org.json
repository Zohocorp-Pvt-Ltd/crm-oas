{
    "openapi": "3.0.0",
    "info": {
        "title": "org",
        "description": "org",
        "version": "v8.0"
    },
    "servers": [{"url": "https://zohoapis.com"}],
    "paths": {
        "/crm/v8/org": {"get": {
            "operationId": "Get Organization",
            "parameters": [
                {"$ref": "#/components/parameters/X-ZOHO-SERVICE"},
                {"$ref": "#/components/parameters/X-ZCSRF-TOKEN"}
            ],
            "responses": {"200": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [
                    {"$ref": "#/components/schemas/Response_Wrapper"},
                    {"$ref": "#/components/schemas/Invalid_Data_Exception"}
                ]}}}
            }}
        }},
        "/crm/v8/org/photo": {
            "get": {
                "operationId": "Get Org Photo",
                "responses": {"200": {
                    "description": "",
                    "content": {"image/png": {"schema": {"oneOf": [{"$ref": "#/components/schemas/File_Body_Wrapper"}]}}}
                }}
            },
            "post": {
                "operationId": "Upload Organization Photo",
                "requestBody": {
                    "content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/File_Body_Wrapper"}}},
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Success_Response"}]}}}
                    },
                    "400": {
                        "description": "",
                        "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Invalid_Data_Exception"}]}}}
                    }
                }
            },
            "delete": {
                "operationId": "Delete Organization Photo",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Success_Response"}]}}}
                    },
                    "400": {
                        "description": "",
                        "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Invalid_Data_Exception"}]}}}
                    }
                }
            }
        }
    },
    "security": [{"iam-oauth2-schema": ["ZohoCRM.org.all"]}],
    "components": {
        "schemas": {
            "License_Details": {
                "type": "object",
                "properties": {
                    "paid_expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "users_license_purchased": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "trial_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "trial_expiry": {
                        "type": "string",
                        "nullable": true
                    },
                    "paid": {"type": "boolean"},
                    "paid_type": {"type": "string"},
                    "trial_action": {"type": "string"}
                },
                "required": [
                    "paid_expiry",
                    "users_license_purchased",
                    "trial_type",
                    "trial_expiry",
                    "paid",
                    "paid_type",
                    "trial_action"
                ]
            },
            "hierarchy_preferences": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "Role_Hierarchy",
                            "Reporting_To_Hierarchy"
                        ]
                    },
                    "strictly_reporting": {"type": "boolean"}
                },
                "required": [
                    "type",
                    "strictly_reporting"
                ]
            },
            "checkin_preferences": {
                "type": "object",
                "properties": {"restricted_event_types": {
                    "type": "string",
                    "nullable": true
                }},
                "required": ["restricted_event_types"]
            },
            "Org": {
                "type": "object",
                "properties": {
                    "country": {"type": "string"},
                    "photo_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "mc_status": {"type": "boolean"},
                    "gapps_enabled": {"type": "boolean"},
                    "translation_enabled": {"type": "boolean"},
                    "street": {
                        "type": "string",
                        "nullable": true
                    },
                    "domain_name": {"type": "string"},
                    "alias": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {"type": "string"},
                    "id": {"type": "string"},
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "type": "string",
                        "nullable": true
                    },
                    "employee_count": {"type": "string"},
                    "website": {"type": "string"},
                    "currency_symbol": {"type": "string"},
                    "mobile": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency_locale": {"type": "string"},
                    "primary_zuid": {"type": "string"},
                    "zia_portal_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "time_zone": {"type": "string"},
                    "zgid": {"type": "string"},
                    "country_code": {"type": "string"},
                    "deletable_org_account": {"type": "boolean"},
                    "license_details": {"$ref": "#/components/schemas/License_Details"},
                    "hierarchy_preferences": {"$ref": "#/components/schemas/hierarchy_preferences"},
                    "phone": {"type": "string"},
                    "company_name": {"type": "string"},
                    "privacy_settings": {"type": "boolean"},
                    "primary_email": {"type": "string"},
                    "iso_code": {"type": "string"},
                    "hipaa_compliance_enabled": {"type": "boolean"},
                    "lite_users_enabled": {"type": "boolean"},
                    "max_per_page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ezgid": {"type": "string"},
                    "call_icon": {"type": "string"},
                    "oauth_presence": {"type": "boolean"},
                    "zia_zgid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "checkin_preferences": {"$ref": "#/components/schemas/checkin_preferences"},
                    "type": {
                        "type": "string",
                        "enum": [
                            "Bigin",
                            "Production",
                            "Developer",
                            "Sandbox"
                        ]
                    },
                    "created_time": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "country",
                    "photo_id",
                    "city",
                    "description",
                    "mc_status",
                    "gapps_enabled",
                    "translation_enabled",
                    "street",
                    "domain_name",
                    "alias",
                    "currency",
                    "id",
                    "state",
                    "fax",
                    "zip",
                    "currency_symbol",
                    "mobile",
                    "currency_locale",
                    "primary_zuid",
                    "zia_portal_id",
                    "time_zone",
                    "zgid",
                    "country_code",
                    "deletable_org_account",
                    "license_details",
                    "hierarchy_preferences",
                    "phone",
                    "company_name",
                    "privacy_settings",
                    "primary_email",
                    "iso_code",
                    "hipaa_compliance_enabled",
                    "lite_users_enabled",
                    "max_per_page",
                    "ezgid",
                    "call_icon",
                    "oauth_presence",
                    "zia_zgid",
                    "checkin_preferences"
                ]
            },
            "Response_Wrapper": {
                "type": "object",
                "properties": {"org": {
                    "items": {"$ref": "#/components/schemas/Org"},
                    "type": "array"
                }},
                "required": ["org"]
            },
            "Expected_DataType": {
                "type": "object",
                "properties": {
                    "api_name": {"type": "string"},
                    "json_path": {"type": "string"},
                    "expected_data_type": {"type": "string"}
                },
                "required": [
                    "api_name",
                    "json_path",
                    "expected_data_type"
                ]
            },
            "Error_Detail": {
                "type": "object",
                "properties": {
                    "api_name": {"type": "string"},
                    "json_path": {"type": "string"}
                },
                "required": [
                    "api_name",
                    "json_path"
                ]
            },
            "Maximum_Length": {
                "type": "object",
                "properties": {
                    "api_name": {"type": "string"},
                    "json_path": {"type": "string"},
                    "maximum_length": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "maximum_length"
                ]
            },
            "Resource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "id"
                ]
            },
            "Feature": {
                "type": "object",
                "properties": {
                    "name": {"type": "string"},
                    "resources": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/Resource"}
                    }
                },
                "required": [
                    "name",
                    "resources"
                ]
            },
            "ShiftHour_Error_Detail": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "api_name": {"type": "string"},
                    "json_path": {"type": "string"},
                    "features": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/Feature"}
                    }
                },
                "required": [
                    "status",
                    "api_name",
                    "json_path",
                    "features"
                ]
            },
            "Cannot_Update": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["CANNOT_UPDATE"]
                    },
                    "message": {
                        "type": "string",
                        "enum": ["Company not created"]
                    },
                    "details": {"oneOf": [
                        {"$ref": "#/components/schemas/Error_Detail"},
                        {"$ref": "#/components/schemas/ShiftHour_Error_Detail"}
                    ]}
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Mandatory_Not_Found": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["MANDATORY_NOT_FOUND"]
                    },
                    "message": {"type": "string"},
                    "details": {"$ref": "#/components/schemas/Error_Detail"}
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Success_Response": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["success"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["SUCCESS"]
                    },
                    "message": {"type": "string"},
                    "details": {
                        "type": "object",
                        "properties": {"id": {"type": "string"}},
                        "required": ["id"]
                    }
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Invalid_Data": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"]
                    },
                    "message": {"type": "string"},
                    "details": {"oneOf": [
                        {"$ref": "#/components/schemas/Error_Detail"},
                        {"$ref": "#/components/schemas/Expected_DataType"},
                        {"$ref": "#/components/schemas/Maximum_Length"}
                    ]}
                },
                "required": [
                    "status",
                    "code",
                    "message",
                    "details"
                ]
            },
            "Success_Response_Wrapper": {
                "type": "object",
                "properties": {"org": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/Success_Response"}]},
                    "type": "array"
                }},
                "required": ["org"]
            },
            "Action_Wrapper": {
                "type": "object",
                "properties": {"org": {
                    "items": {"oneOf": [
                        {"$ref": "#/components/schemas/Cannot_Update"},
                        {"$ref": "#/components/schemas/Mandatory_Not_Found"},
                        {"$ref": "#/components/schemas/Invalid_Data"}
                    ]},
                    "type": "array"
                }},
                "required": ["org"]
            },
            "File_Body_Wrapper": {
                "type": "object",
                "properties": {"file": {"type": "object"}}
            },
            "Invalid_Data_Exception": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    },
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"]
                    },
                    "message": {"type": "string"},
                    "details": {"type": "object"}
                }
            }
        },
        "parameters": {
            "X-ZOHO-SERVICE": {
                "name": "X-ZOHO-SERVICE",
                "in": "header",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": ["crmmobile"]
                }
            },
            "X-ZCSRF-TOKEN": {
                "name": "X-ZCSRF-TOKEN",
                "in": "header",
                "required": false,
                "schema": {"type": "string"}
            }
        },
        "headers": {},
        "securitySchemes": {"iam-oauth2-schema": {"$ref": "https://raw.githubusercontent.com/Zohocorp-Pvt-Ltd/crm-oas/refs/heads/main/v8.0/common.json#/components/securitySchemes/iam-oauth2-schema"}}
    }
}