{
    "openapi": "3.0.0",
    "info": {
        "title": "shift_hours",
        "description": "",
        "version": "v8.0"
    },
    "servers": [
        {
            "url": "https://zohoapis.com"
        }
    ],
    "paths": {
        "/crm/v8/settings/business_hours/shift_hours": {
            "get": {
                "operationId": "Get Shift Hours",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-CRM-ORG"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ShiftHours"
                    },
                    "400": {
                        "$ref": "#/components/responses/RRootResponse"
                    }
                }
            },
            "post": {
                "operationId": "Create Shifts Hours",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-CRM-ORG"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/body"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreateSuccessResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            },
            "put": {
                "operationId": "Update Shift Hours",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-CRM-ORG"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/body"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            }
        },
        "/crm/v8/settings/business_hours/shift_hours/{shift_id}": {
            "get": {
                "operationId": "Get Shift Hour",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-CRM-ORG"
                    },
                    {
                        "$ref": "#/components/parameters/shift_id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "200": {
                        "$ref": "#/components/responses/ShiftHours"
                    },
                    "400": {
                        "$ref": "#/components/responses/RRootResponse"
                    }
                }
            },
            "put": {
                "operationId": "Update Shift Hour",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-CRM-ORG"
                    },
                    {
                        "$ref": "#/components/parameters/shift_id"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/body"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                }
            },
            "delete": {
                "operationId": "Delete Shift Hour",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-CRM-ORG"
                    },
                    {
                        "$ref": "#/components/parameters/shift_id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/RootResponse"
                    }
                }
            }
        }
    },
    "security": [
        {
            "iam-oauth2-schema": [
                ""
            ]
        }
    ],
    "components": {
        "schemas": {
            "holidays": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "date",
                    "year",
                    "name",
                    "id"
                ]
            },
            "role": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "id"
                ]
            },
            "users": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/role"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string"
                    },
                    "zuid": {
                        "type": "string"
                    },
                    "effective_from": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "required": [
                    "role",
                    "name",
                    "id",
                    "email",
                    "zuid",
                    "effective_from"
                ]
            },
            "shift_custom_timing": {
                "type": "object",
                "properties": {
                    "days": {
                        "type": "string"
                    },
                    "shift_timing": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "pattern": "hh:mm"
                        }
                    }
                },
                "required": [
                    "days",
                    "shift_timing"
                ]
            },
            "break_custom_timing": {
                "type": "object",
                "properties": {
                    "days": {
                        "type": "string"
                    },
                    "break_timing": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "pattern": "hh:mm"
                        }
                    }
                },
                "required": [
                    "days",
                    "break_timing"
                ]
            },
            "break_hours": {
                "type": "object",
                "properties": {
                    "break_days": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "same_as_everyday": {
                        "type": "boolean"
                    },
                    "daily_timing": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "pattern": "hh:mm"
                        }
                    },
                    "custom_timing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/break_custom_timing"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "break_days",
                    "same_as_everyday",
                    "daily_timing",
                    "custom_timing",
                    "id"
                ]
            },
            "shift_hours": {
                "type": "object",
                "properties": {
                    "same_as_everyday": {
                        "type": "boolean"
                    },
                    "shift_days": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "daily_timing": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "pattern": "hh:mm"
                        }
                    },
                    "custom_timing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/shift_custom_timing"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "break_hours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/break_hours"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/users"
                        }
                    },
                    "holidays": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/holidays"
                        }
                    },
                    "users_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timezone": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "same_as_everyday",
                    "shift_days",
                    "daily_timing",
                    "custom_timing",
                    "id",
                    "break_hours",
                    "users",
                    "holidays",
                    "users_count",
                    "timezone",
                    "name"
                ]
            },
            "shift_count": {
                "type": "object",
                "properties": {
                    "total_shift_with_user": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "total_shift": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "required": [
                    "total_shift_with_user",
                    "total_shift"
                ]
            },
            "Response_Wrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "$ref": "#/components/schemas/shift_hours"
                        },
                        "type": "array"
                    },
                    "shift_count": {
                        "$ref": "#/components/schemas/shift_count"
                    }
                },
                "required": [
                    "shift_hours",
                    "shift_count"
                ]
            },
            "Body_Wrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "$ref": "#/components/schemas/shift_hours"
                        },
                        "type": "array"
                    }
                }
            },
            "details": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id"
                ]
            },
            "Success_Response": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "SUCCESS"
                        ],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "details": {
                        "$ref": "#/components/schemas/details"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "success"
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "Action_Wrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Success_Response"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "shift_hours"
                ]
            },
            "MandatoryDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    }
                },
                "required": [
                    "api_name",
                    "json_path"
                ]
            },
            "MandatoryDetails1": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    }
                }
            },
            "MandatoryError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "MANDATORY_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/MandatoryDetails1"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidUrlDetails": {
                "type": "object",
                "properties": {
                    "resource_path_index": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "resource_path_index"
                ]
            },
            "InvalidUrlError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/InvalidUrlDetails"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "MandatoryErrorWrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MandatoryError"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "shift_hours"
                ]
            },
            "DependeeDetails": {
                "type": "object",
                "properties": {
                    "dependee": {
                        "$ref": "#/components/schemas/MandatoryDetails"
                    },
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    }
                },
                "required": [
                    "dependee",
                    "api_name",
                    "json_path"
                ]
            },
            "DependeeError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "DEPENDENT_FIELD_MISSING"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/DependeeDetails"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "DependeeErrorWrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/DependeeError"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "shift_hours"
                ]
            },
            "InvalidRegexDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "json_path": {
                        "type": "string",
                        "nullable": true
                    },
                    "regex": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "regex"
                ]
            },
            "InvalidValueError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA"
                        ],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "details": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MandatoryDetails1"
                            },
                            {
                                "$ref": "#/components/schemas/InvalidRegexDetails"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidValueErrorWrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/InvalidValueError"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "shift_hours"
                ]
            },
            "TypeDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    },
                    "expected_data_type": {
                        "type": "string"
                    },
                    "regex": {
                        "type": "string"
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "expected_data_type",
                    "regex"
                ]
            },
            "ExpectedDataTypeDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    },
                    "expected_data_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "expected_data_type"
                ]
            },
            "ExpectedDataTypeError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ExpectedDataTypeDetails"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidTypeDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "details"
                ]
            },
            "InvalidTypeError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TypeDetails"
                            },
                            {
                                "$ref": "#/components/schemas/InvalidTypeDetails"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidTypeErrorWrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/InvalidTypeError"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "shift_hours"
                ]
            },
            "MaxLengthDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "json_path": {
                        "type": "string",
                        "nullable": true
                    },
                    "maximum_length": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "maximum_length"
                ]
            },
            "MinLengthDetails": {
                "type": "object",
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    },
                    "minimum_length": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "minimum_length"
                ]
            },
            "MinLengthError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MinLengthDetails"
                            },
                            {
                                "$ref": "#/components/schemas/MaxLengthDetails"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "MinLengthErrorWrapper": {
                "type": "object",
                "properties": {
                    "shift_hours": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MinLengthError"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "shift_hours"
                ]
            }
        },
        "responses": {
            "ShiftHours": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Response_Wrapper"
                                }
                            ]
                        }
                    }
                }
            },
            "CreateSuccessResponse": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Action_Wrapper"
                                }
                            ]
                        }
                    }
                }
            },
            "SuccessResponse": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Action_Wrapper"
                                }
                            ]
                        }
                    }
                }
            },
            "RootResponse": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MandatoryError"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidUrlError"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidTypeError"
                                }
                            ]
                        }
                    }
                }
            },
            "RRootResponse": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MandatoryError"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidUrlError"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidTypeError"
                                }
                            ]
                        }
                    }
                }
            },
            "ErrorResponse": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MandatoryErrorWrapper"
                                },
                                {
                                    "$ref": "#/components/schemas/DependeeErrorWrapper"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidValueErrorWrapper"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidTypeErrorWrapper"
                                },
                                {
                                    "$ref": "#/components/schemas/MinLengthErrorWrapper"
                                },
                                {
                                    "$ref": "#/components/schemas/ExpectedDataTypeError"
                                },
                                {
                                    "$ref": "#/components/schemas/InvalidValueError"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "parameters": {
            "X-CRM-ORG": {
                "name": "X-CRM-ORG",
                "in": "header",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "shift_id": {
                "name": "shift_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "body": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Body_Wrapper"
                        }
                    }
                },
                "required": true
            }
        },
        "headers": {},
        "securitySchemes": {
            "iam-oauth2-schema": {
                "$ref": "https://raw.githubusercontent.com/Zohocorp-Pvt-Ltd/crm-oas/refs/heads/main/v8.0/common.json#/components/securitySchemes/iam-oauth2-schema"
            }
        }
    }
}