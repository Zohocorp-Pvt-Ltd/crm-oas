{
    "openapi": "3.0.0",
    "info": {
        "title": "territories",
        "description": "Territories",
        "version": "v8.0"
    },
    "servers": [{"url": "https://zohoapis.com"}],
    "paths": {
        "/crm/v8/settings/territories": {
            "get": {
                "operationId": "Get Territories",
                "parameters": [
                    {"$ref": "#/components/parameters/filters"},
                    {"$ref": "#/components/parameters/include"},
                    {"$ref": "#/components/parameters/page"},
                    {"$ref": "#/components/parameters/per_page"},
                    {"$ref": "#/components/parameters/ids"}
                ],
                "responses": {
                    "204": {"description": ""},
                    "200": {"$ref": "#/components/responses/Territories"},
                    "500": {"$ref": "#/components/responses/RInternalErrorResponse"}
                }
            },
            "post": {
                "operationId": "Create Territories",
                "requestBody": {"$ref": "#/components/requestBodies/body"},
                "responses": {
                    "201": {"$ref": "#/components/responses/CreateSuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"},
                    "500": {"$ref": "#/components/responses/InternalErrorResponse"}
                }
            },
            "put": {
                "operationId": "Update Territories",
                "requestBody": {"$ref": "#/components/requestBodies/body"},
                "responses": {
                    "200": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"},
                    "500": {"$ref": "#/components/responses/InternalErrorResponse"}
                }
            },
            "delete": {
                "operationId": "Delete Territories",
                "parameters": [
                    {"$ref": "#/components/parameters/ids"},
                    {"$ref": "#/components/parameters/delete_previous_forecasts"}
                ],
                "responses": {
                    "200": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"},
                    "500": {"$ref": "#/components/responses/InternalErrorResponse"}
                }
            }
        },
        "/crm/v8/settings/territories/{id}": {
            "get": {
                "operationId": "Get Territory",
                "parameters": [{"$ref": "#/components/parameters/id"}],
                "responses": {
                    "204": {"description": ""},
                    "200": {"$ref": "#/components/responses/Territories"},
                    "500": {"$ref": "#/components/responses/RInternalErrorResponse"}
                }
            },
            "put": {
                "operationId": "Update Territory",
                "parameters": [{"$ref": "#/components/parameters/id"}],
                "requestBody": {"$ref": "#/components/requestBodies/body"},
                "responses": {
                    "200": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"},
                    "500": {"$ref": "#/components/responses/InternalErrorResponse"}
                }
            },
            "delete": {
                "operationId": "Delete Territory",
                "parameters": [
                    {"$ref": "#/components/parameters/id"},
                    {"$ref": "#/components/parameters/delete_previous_forecasts"}
                ],
                "responses": {
                    "200": {"$ref": "#/components/responses/SuccessResponse"},
                    "400": {"$ref": "#/components/responses/ErrorResponse"},
                    "500": {"$ref": "#/components/responses/InternalErrorResponse"}
                }
            }
        },
        "/crm/v8/settings/territories/{id}/__child_territories": {"get": {
            "operationId": "Get Child Territory",
            "parameters": [
                {"$ref": "#/components/parameters/id"},
                {"$ref": "#/components/parameters/filters"},
                {"$ref": "#/components/parameters/page"},
                {"$ref": "#/components/parameters/per_page"}
            ],
            "responses": {
                "204": {"description": ""},
                "200": {"$ref": "#/components/responses/Territories"},
                "400": {"$ref": "#/components/responses/ErrorResponse"},
                "500": {"$ref": "#/components/responses/RInternalErrorResponse"}
            }
        }},
        "/crm/v8/settings/territories/actions/associated_users_count": {"get": {
            "operationId": "Get Associated User Count",
            "responses": {
                "204": {"description": ""},
                "200": {"$ref": "#/components/responses/Associated_Usesr_Count"},
                "500": {"$ref": "#/components/responses/RInternalErrorResponse"}
            }
        }},
        "/crm/v8/settings/territories/actions/deleted_associated_territories": {"get": {
            "operationId": "Get Deleted Associated Territory",
            "parameters": [{"$ref": "#/components/parameters/ids"}],
            "responses": {
                "204": {"description": ""},
                "200": {"$ref": "#/components/responses/Deleted_Associated_Territories"},
                "500": {"$ref": "#/components/responses/RInternalErrorResponse"}
            }
        }},
        "/crm/v8/settings/territories/{id}/actions/transfer_and_delete": {"post": {
            "operationId": "Transfer And Delete Territory",
            "parameters": [{"$ref": "#/components/parameters/id"}],
            "requestBody": {"$ref": "#/components/requestBodies/TransferBody"},
            "responses": {
                "200": {"$ref": "#/components/responses/SuccessResponse"},
                "400": {"$ref": "#/components/responses/ErrorResponse"}
            }
        }},
        "/crm/v8/settings/territories/actions/transfer_and_delete": {"post": {
            "operationId": "Transfer And Delete Territories",
            "requestBody": {"$ref": "#/components/requestBodies/TransferBody"},
            "responses": {
                "200": {"$ref": "#/components/responses/SuccessResponse"},
                "400": {"$ref": "#/components/responses/ErrorResponse"}
            }
        }}
    },
    "security": [{"iam-oauth2-schema": ["ZohoCRM.settings.territories.ALL"]}],
    "components": {
        "schemas": {
            "Minified_Territory": {
                "type": "object",
                "properties": {
                    "name": {"type": "string"},
                    "id": {"type": "string"},
                    "subordinates": {"type": "boolean"}
                },
                "required": [
                    "name",
                    "id",
                    "subordinates"
                ]
            },
            "Criteria": {
                "type": "object",
                "properties": {
                    "comparator": {
                        "type": "string",
                        "nullable": true
                    },
                    "field": {
                        "type": "object",
                        "properties": {
                            "api_name": {
                                "type": "string",
                                "nullable": true
                            },
                            "id": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "required": [
                            "api_name",
                            "id"
                        ]
                    },
                    "value": {
                        "type": "object",
                        "nullable": true
                    },
                    "group_operator": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "items": {"$ref": "#/components/schemas/Criteria"},
                        "type": "array"
                    }
                },
                "required": [
                    "comparator",
                    "field",
                    "value",
                    "group_operator",
                    "group"
                ]
            },
            "manager": {
                "type": "object",
                "properties": {
                    "name": {"type": "string"},
                    "id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "id"
                ]
            },
            "reporting_to": {
                "type": "object",
                "properties": {
                    "name": {"type": "string"},
                    "id": {"type": "string"}
                },
                "required": [
                    "name",
                    "id"
                ]
            },
            "territories": {
                "type": "object",
                "properties": {
                    "created_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "manager": {"$ref": "#/components/schemas/manager"},
                    "reporting_to": {"$ref": "#/components/schemas/reporting_to"},
                    "permission_type": {
                        "type": "string",
                        "enum": [
                            "read_write_delete",
                            "read_only"
                        ]
                    },
                    "modified_by": {"$ref": "./users.json#/components/schemas/Minified_User"},
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {"type": "string"},
                    "created_by": {"$ref": "./users.json#/components/schemas/Minified_User"},
                    "account_rule_criteria": {"$ref": "#/components/schemas/Criteria"},
                    "deal_rule_criteria": {"$ref": "#/components/schemas/Criteria"},
                    "lead_rule_criteria": {"$ref": "#/components/schemas/Criteria"},
                    "name": {"type": "string"},
                    "api_name": {"type": "string"}
                },
                "required": [
                    "created_time",
                    "modified_time",
                    "manager",
                    "reporting_to",
                    "permission_type",
                    "modified_by",
                    "description",
                    "id",
                    "created_by",
                    "account_rule_criteria",
                    "deal_rule_criteria",
                    "name",
                    "api_name"
                ]
            },
            "info": {
                "type": "object",
                "properties": {
                    "per_page": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "more_records": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "required": [
                    "per_page",
                    "count",
                    "page",
                    "more_records"
                ]
            },
            "Body_Wrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"$ref": "#/components/schemas/territories"},
                    "type": "array"
                }}
            },
            "Response_Wrapper": {
                "type": "object",
                "properties": {
                    "territories": {
                        "items": {"$ref": "#/components/schemas/territories"},
                        "type": "array"
                    },
                    "info": {"$ref": "#/components/schemas/info"}
                },
                "required": [
                    "territories",
                    "info"
                ]
            },
            "details": {
                "type": "object",
                "properties": {"id": {
                    "type": "string",
                    "nullable": true
                }},
                "required": ["id"]
            },
            "Success_Response": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["SUCCESS"],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": ["success"],
                        "nullable": true
                    },
                    "details": {"$ref": "#/components/schemas/details"}
                },
                "required": [
                    "code",
                    "message",
                    "status",
                    "details"
                ]
            },
            "SuccessWrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/Success_Response"}]},
                    "type": "array"
                }},
                "required": ["territories"]
            },
            "MandatoryDetails": {
                "type": "object",
                "properties": {
                    "api_name": {"type": "string"},
                    "json_path": {"type": "string"},
                    "supported_values": {
                        "type": "array",
                        "items": {"type": "string"}
                    }
                },
                "required": [
                    "api_name",
                    "json_path",
                    "supported_values"
                ]
            },
            "MandatoryError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["MANDATORY_NOT_FOUND"]
                    },
                    "message": {"type": "string"},
                    "details": {"$ref": "#/components/schemas/MandatoryDetails"},
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "MandatoryErrorWrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/MandatoryError"}]},
                    "type": "array"
                }},
                "required": ["territories"]
            },
            "DuplicateError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["DUPLICATE_DATA"],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "details": {"$ref": "#/components/schemas/MandatoryDetails"},
                    "status": {
                        "type": "string",
                        "enum": ["error"],
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "DuplicateErrorWrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/DuplicateError"}]},
                    "type": "array"
                }},
                "required": ["territories"]
            },
            "TypeDetails": {
                "type": "object",
                "properties": {
                    "api_name": {"type": "string"},
                    "json_path": {"type": "string"},
                    "expected_data_type": {"type": "string"}
                },
                "required": [
                    "api_name",
                    "json_path",
                    "expected_data_type"
                ]
            },
            "InvalidTypeError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"]
                    },
                    "message": {"type": "string"},
                    "details": {"$ref": "#/components/schemas/TypeDetails"},
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidTypeErrorWrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/InvalidTypeError"}]},
                    "type": "array"
                }},
                "required": ["territories"]
            },
            "InvalidValueError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["INVALID_DATA"],
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "details": {"$ref": "#/components/schemas/MandatoryDetails"},
                    "status": {
                        "type": "string",
                        "enum": ["error"],
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidValueErrorWrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/InvalidValueError"}]},
                    "type": "array"
                }},
                "required": ["territories"]
            },
            "InvalidUrlDetails": {
                "type": "object",
                "properties": {"resource_path_index": {
                    "type": "integer",
                    "format": "int32"
                }},
                "required": ["resource_path_index"]
            },
            "InvalidUrlError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA",
                            "NOT_ALLOWED"
                        ]
                    },
                    "message": {"type": "string"},
                    "details": {"$ref": "#/components/schemas/InvalidUrlDetails"},
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    }
                },
                "required": [
                    "code",
                    "message",
                    "details",
                    "status"
                ]
            },
            "InvalidUrlErrorWrapper": {
                "type": "object",
                "properties": {"territories": {
                    "items": {"oneOf": [{"$ref": "#/components/schemas/InvalidUrlError"}]},
                    "type": "array"
                }},
                "required": ["territories"]
            },
            "InternalError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": ["INTERNAL_SERVER_ERROR"]
                    },
                    "details": {"type": "object"},
                    "message": {"type": "string"},
                    "status": {
                        "type": "string",
                        "enum": ["error"]
                    }
                },
                "required": [
                    "code",
                    "details",
                    "message",
                    "status"
                ]
            },
            "associated_users_count": {
                "type": "object",
                "properties": {
                    "count": {"type": "string"},
                    "territory": {"$ref": "#/components/schemas/Minified_Territory"}
                },
                "required": [
                    "count",
                    "territory"
                ]
            },
            "Associated_Users_Count_Wrapper": {
                "type": "object",
                "properties": {
                    "associated_users_count": {
                        "items": {"$ref": "#/components/schemas/associated_users_count"},
                        "type": "array"
                    },
                    "info": {"$ref": "#/components/schemas/info"}
                },
                "required": [
                    "associated_users_count",
                    "info"
                ]
            },
            "deleted_associated_territories": {
                "type": "object",
                "properties": {
                    "name": {"type": "string"},
                    "id": {"type": "string"},
                    "deleted_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_by": {"$ref": "./users.json#/components/schemas/Minified_User"}
                },
                "required": [
                    "name",
                    "id",
                    "deleted_time",
                    "deleted_by"
                ]
            },
            "Deleted_Associated_Wrapper": {
                "type": "object",
                "properties": {
                    "territories": {
                        "items": {"$ref": "#/components/schemas/deleted_associated_territories"},
                        "type": "array"
                    },
                    "info": {"$ref": "#/components/schemas/info"}
                },
                "required": [
                    "territories",
                    "info"
                ]
            }
        },
        "responses": {
            "Territories": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Response_Wrapper"}]}}}
            },
            "CreateSuccessResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/SuccessWrapper"}]}}}
            },
            "SuccessResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/SuccessWrapper"}]}}}
            },
            "ErrorResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [
                    {"$ref": "#/components/schemas/InvalidTypeError"},
                    {"$ref": "#/components/schemas/MandatoryError"},
                    {"$ref": "#/components/schemas/InvalidUrlError"},
                    {"$ref": "#/components/schemas/InvalidUrlErrorWrapper"},
                    {"$ref": "#/components/schemas/InvalidValueErrorWrapper"},
                    {"$ref": "#/components/schemas/InvalidTypeErrorWrapper"},
                    {"$ref": "#/components/schemas/MandatoryErrorWrapper"},
                    {"$ref": "#/components/schemas/DuplicateErrorWrapper"}
                ]}}}
            },
            "InternalErrorResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/InternalError"}]}}}
            },
            "RInternalErrorResponse": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/InternalError"}]}}}
            },
            "Associated_Usesr_Count": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Associated_Users_Count_Wrapper"}]}}}
            },
            "Deleted_Associated_Territories": {
                "description": "",
                "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/Deleted_Associated_Wrapper"}]}}}
            }
        },
        "parameters": {
            "id": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {"type": "string"}
            },
            "ids": {
                "name": "ids",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            },
            "delete_previous_forecasts": {
                "name": "delete_previous_forecasts",
                "in": "query",
                "required": false,
                "schema": {"type": "boolean"}
            },
            "module": {
                "name": "module",
                "in": "path",
                "required": true,
                "schema": {"type": "string"}
            },
            "record": {
                "name": "record",
                "in": "path",
                "required": true,
                "schema": {"type": "string"}
            },
            "include": {
                "name": "include",
                "in": "query",
                "required": false,
                "schema": {"type": "string"}
            },
            "page": {
                "name": "page",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "requestBodies": {
            "body": {
                "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_Wrapper"}}},
                "required": true
            },
            "TransferBody": {
                "content": {"application/json": {}},
                "required": true
            }
        },
        "securitySchemes": {"iam-oauth2-schema": {"$ref": "https://raw.githubusercontent.com/Zohocorp-Pvt-Ltd/crm-oas/refs/heads/main/v8.0/common.json#/components/securitySchemes/iam-oauth2-schema"}}
    }
}